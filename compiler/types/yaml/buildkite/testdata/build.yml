---
version: "1"

environment:
  HELLO: "Hello, Global Message"

templates:
  - name: docker_publish
    source: github.com/go-vela/atlas/stable/docker_publish
    type: github

worker:
  flavor: 16cpu8gb
  platform: gcp

services:
  - name: postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: foo
    ports:
      - "5432:5432"

steps:
  - name: install
    commands:
      - ./gradlew downloadDependencies
    environment:
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=1 -Dorg.gradle.parallel=false
      GRADLE_USER_HOME: .gradle
    image: openjdk:latest
    pull: true
    ruleset:
      event: [ push, pull_request:opened, pull_request:synchronize, pull_request:edited ]
    volumes: [ /foo:/bar:ro ]
    ulimits: [ foo=1024:2048 ]

  - name: test
    commands:
      - ./gradlew check
    environment:
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=1 -Dorg.gradle.parallel=false
      GRADLE_USER_HOME: .gradle
    image: openjdk:latest
    pull: true
    ruleset:
      event: [ push, pull_request ]
    volumes: [ /foo:/bar:ro ]
    ulimits: [ foo=1024:2048 ]

  - name: build
    commands:
      - ./gradlew build
    environment:
      - GRADLE_OPTS=-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=1 -Dorg.gradle.parallel=false
      - GRADLE_USER_HOME=.gradle
    image: openjdk:latest
    pull: true
    ruleset:
      event: [ push, pull_request ]
    volumes:
      - source: /foo
        destination: /bar
        access_mode: ro
    ulimits:
      - name: foo
        soft: 1024
        hard: 2048

  - name: docker_build
    image: plugins/docker:18.09
    parameters:
      dry_run: true
      registry: index.docker.io
      repo: github/octocat
      tags:
        - latest
        - dev
    pull: true
    ruleset:
      if:
        event: [ push, pull_request ]
      operator: and

  - name: docker_publish
    image: plugins/docker:18.09
    parameters:
      registry: index.docker.io
      repo: github/octocat
      tags:
        - latest
        - dev
    pull: true
    ruleset:
      if:
        branch: main
        event: push
      operator: and
    secrets:
      - source: docker_username
        target: plugin_username
      - source: docker_password
        target: plugin_password

secrets:
  # Repo secrets
  - name: docker_username
    key: org/repo/docker/username
    engine: native
    type: repo

  - name: docker_password
    key: org/repo/docker/password
    engine: vault
    type: repo

  # Org secrets
  - name: docker_username
    key: org/docker/username
    engine: native
    type: org

  - name: docker_password
    key: org/docker/password
    engine: vault
    type: org

  # Shared secrets
  - name: docker_username
    key: org/team/docker/username
    engine: native
    type: shared

  - name: docker_password
    key: org/team/docker/password
    engine: vault
    type: shared

  - origin:
      image: target/vela-vault:latest
      pull: always
      parameters:
        addr: vault.example.com
      secrets: [ docker_username, docker_password ]
