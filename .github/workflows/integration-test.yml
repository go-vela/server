# name of the action
name: integration-test

# trigger on pull_request events that modify this file or any database files
on:
  pull_request:
    paths:
      - '.github/workflows/integration-test.yml'
      - 'database/**'

# pipeline to execute
jobs:
  database_postgres:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # support should be n-1 here
        postgres_version:
          - postgres:15-alpine
          - postgres:16-alpine

    services:
      postgres:
        image: ${{ matrix.postgres_version }}
        env:
          POSTGRES_DB: vela
          POSTGRES_PASSWORD: notARealPassword12345
          POSTGRES_USER: vela
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      POSTGRES_ADDR: postgres://vela:notARealPassword12345@localhost:5432/vela

    steps:
      - name: clone
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: install go
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          # use version from go.mod file
          go-version-file: 'go.mod'
          cache: true
          check-latest: true

      - name: testing with ${{ matrix.postgres_version }}
        run: |
          DB_DRIVER=postgres make integration-test

  database_sql:
    runs-on: ubuntu-latest

    env:
      SQLITE_ADDR: vela.db

    steps:
      - name: clone
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: install go
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          # use version from go.mod file
          go-version-file: 'go.mod'
          cache: true
          check-latest: true

      - name: testing with sqlite
        run: |
          DB_DRIVER=sqlite make integration-test
