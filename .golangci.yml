version: "2"
# This is a manually created golangci.com yaml configuration with
# some defaults explicitly provided. There is a large number of
# linters we've enabled that are usually disabled by default.
#
# https://golangci-lint.run/usage/configuration/#config-file

# This section provides the configuration for how golangci
# outputs it results from the linters it executes.
output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate, default is "colored-line-number"
  formats:
    text:
      path: stdout
      # print linter name in the end of issue text, default is true
      print-linter-name: true
      # print lines of code with issue, default is true
      print-issued-lines: true
    json:
      path: stderr
linters:
  # disable all linters as new linters might be added to golangci
  # in v2, this is for disable-all: true
  default: none
  # enable a specific set of linters to run
  enable:

  # This section provides the configuration for each linter
  # we've instructed golangci to execute.
  settings:
    # https://github.com/mibk/dupl
    dupl:
      threshold: 100
    # https://github.com/ultraware/funlen
    funlen:
      # accounting for comments
      lines: 160
      statements: 70
    # https://github.com/denis-tingaikin/go-header
    goheader:
      template: 'SPDX-License-Identifier: Apache-2.0'
    # https://github.com/client9/misspell
    misspell:
      locale: US
    # https://github.com/golangci/golangci-lint/blob/master/pkg/golinters/nolintlint
    nolintlint:
      require-explanation: true # require an explanation for nolint directives
      require-specific: true # require nolint directives to be specific about which linter is being skipped
      allow-unused: false # allow nolint directives that don't address a linting issue
    # https://golangci-lint.run/usage/linters/#tagalign
    # ensure struct tags are aligned
    # will auto fix with `make lintfix`
    tagalign:
      sort: false
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      # Excluding configuration per-path, per-linter, per-text and per-source
      # prevent linters from running on *_test.go files
      - linters:
          - funlen
          - goconst
          - gocyclo
          - wsl
        path: _test\.go
    paths:
      - third_party$
      - builtin$
      - examples$
issues:
  # make issues output unique by line, default is true
  uniq-by-line: true
formatters:
  enable:
    - gci
    - gofmt
  settings:
    # https://github.com/daixiang0/gci
    # ensure import order is consistent
    # gci write --custom-order -s standard -s default -s blank -s dot -s "prefix(github.com/go-vela)" .
    gci:
      sections:
        - standard
        - default
        - blank
        - dot
        - prefix(github.com/go-vela)
      custom-order: true
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
