# Copyright (c) 2021 Target Brands, Inc. All rights reserved.
#
# Use of this source code is governed by the LICENSE file in this repository.

version: '3'

services:

  # The `server` compose service hosts the Vela server and API.
  #
  # This component is used for processing web requests and
  # managing resources in the database and publishing
  # builds to the FIFO queue.
  #
  # https://go-vela.github.io/docs/concepts/infrastructure/server/
  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: server
    image: server:local
    networks:
      - vela
    environment:
      VELA_ADDR: 'http://localhost:8080'
      VELA_WEBUI_ADDR: 'http://localhost:8888'
      VELA_DATABASE_DRIVER: postgres
      VELA_DATABASE_CONFIG: 'postgres://vela:zB7mrKDTZqNeNTD8z47yG4DHywspAh@postgres:5432/vela?sslmode=disable'
      VELA_DATABASE_ENCRYPTION_KEY: 'C639A572E14D5075C526FDDD43E4ECF6'
      VELA_LOG_LEVEL: trace
      VELA_QUEUE_DRIVER: redis
      VELA_QUEUE_CONFIG: 'redis://redis:6379'
      VELA_QUEUE_WORKER_ROUTES: 'docker,local,docker:local'
      VELA_SECRET: 'zB7mrKDTZqNeNTD8z47yG4DHywspAh'
      VELA_SOURCE_DRIVER: github
      VELA_SECRET_NATIVE_KEY: 'C639A572E14D5075C526FDDD43E4ECF6'
      VELA_SECRET_VAULT: 'true'
      VELA_SECRET_VAULT_ADDR: 'http://vault:8200'
      VELA_SECRET_VAULT_TOKEN: vela
      VELA_REFRESH_TOKEN_DURATION: 5m
      VELA_ACCESS_TOKEN_DURATION: 1m
      VELA_DISABLE_WEBHOOK_VALIDATION: 'true'
      VELA_ENABLE_SECURE_COOKIE: 'false'
    env_file:
      - .env
    restart: always
    ports:
      - '8080:8080'
    depends_on:
      - postgres
      - redis
      - vault

  # The `worker` compose service hosts the Vela build daemon.
  #
  # This component is used for pulling builds from the FIFO
  # queue and executing them based off their configuration.
  #
  # https://go-vela.github.io/docs/concepts/infrastructure/worker/
  worker:
    container_name: worker
    image: target/vela-worker:latest
    networks:
      - vela
    environment:
      VELA_BUILD_LIMIT: 1
      VELA_BUILD_TIMEOUT: 30m
      VELA_LOG_LEVEL: trace
      VELA_QUEUE_DRIVER: redis
      VELA_QUEUE_CONFIG: 'redis://redis:6379'
      VELA_QUEUE_WORKER_ROUTES: 'docker,local,docker:local'
      VELA_RUNTIME_DRIVER: docker
      VELA_SERVER_ADDR: 'http://server:8080'
      VELA_SERVER_SECRET: 'zB7mrKDTZqNeNTD8z47yG4DHywspAh'
      WORKER_ADDR: 'http://worker:8080'
      WORKER_CHECK_IN: 15m
    restart: always
    ports:
      - '8081:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    depends_on:
      - server

  # The `ui` compose service hosts the Vela UI.
  #
  # This component is used for providing a user-friendly
  # interface for triggering actions in the Vela system.
  #
  # https://go-vela.github.io/docs/concepts/infrastructure/ui/
  ui:
    container_name: ui
    image: target/vela-ui:latest
    networks:
      - vela
    env_file:
      - .env
    restart: always
    ports:
      - '8888:80'
    depends_on:
      - server

  # The `redis` compose service hosts the Redis database.
  #
  # This component is used for publishing builds to a FIFO queue.
  #
  # https://redis.io/
  redis:
    container_name: redis
    image: redis:5-alpine
    networks:
      - vela
    ports:
      - '6379:6379'

  # The `postgres` compose service hosts the Postgresql database.
  #
  # This component is used for storing data at rest.
  #
  # https://www.postgresql.org/
  postgres:
    container_name: postgres
    image: postgres:12-alpine
    networks:
      - vela
    environment:
      POSTGRES_DB: vela
      POSTGRES_PASSWORD: 'zB7mrKDTZqNeNTD8z47yG4DHywspAh'
      POSTGRES_USER: vela
    ports:
      - '5432:5432'

  # The `vault` compose service hosts the HashiCorp Vault instance.
  #
  # This component is used for storing sensitive data like secrets.
  #
  # https://www.vaultproject.io/
  vault:
    image: vault:latest
    container_name: vault
    command: server -dev
    networks:
      - vela
    environment:
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_DEV_ROOT_TOKEN_ID: vela
    ports:
      - '8200:8200'
    cap_add:
      - IPC_LOCK

networks:
  vela:
